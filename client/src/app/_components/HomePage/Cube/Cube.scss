@use "@/styles/main" as *;

@keyframes turn {
  0% {
    transform: rotateY(0deg);
  }
  25% {
    transform: rotateY(90deg);
  }
  50% {
    transform: rotateY(180deg);
  }
  75% {
    transform: rotateY(270deg);
  }
  100% {
    transform: rotateY(360deg);
  }
}

.cube-container {
  position: relative;
  perspective: 500px;
  margin: 3rem;
  img {
    @include image(12rem, 5rem, cover);
    position: absolute;
    top: 30%;
    left: 12.5%;
    z-index: 1;
    opacity: 0.65;
    margin: 0.2rem 0 0.2rem 0;
  }
}

.cube {
  @include general-properties(16rem, 16rem, transparent);
  position: relative;
  transform-style: preserve-3d;
  animation: turn 29s ease-in-out 0s infinite;
  // transform: rotateY(0deg);

  &:hover {
    animation-play-state: paused;
  }
}

.face {
  position: absolute;
  opacity: 0.8;
  user-select: none;
  text-shadow: 0px 0px 5px black;
}

$cubeColors: (
  welcome: #02d502,
  info: #02d502,
  account: #ffff30,
  how-to-play: #d02020,
  top: white,
  bottom: white
);

// creating each side of the cube with common properties and its own bg-color
@each $class, $backColor in $cubeColors {
  .#{$class} {
    @include general-properties(15rem, 15rem, #{$backColor});
    @include display-flex(column);
  }
}

$translateX: 7.5rem;
$rotateY: 90deg;

.welcome {
  transform: translateZ($translateX);
}
.account {
  transform: translateX(-$translateX) rotateY(-$rotateY);
}
.info {
  transform: translateZ(-$translateX) rotateY(calc($rotateY * 2));
}
.how-to-play {
  transform: translateX($translateX) rotateY($rotateY);
}
.top {
  transform: translateY(-$translateX) rotateX($rotateY);
}
.bottom {
  transform: translateY($translateX) rotateX(-$rotateY);
}
